<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Life is a Journey</title>
  
  <subtitle>陌上花开~ | 可缓缓归矣</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nonsense-j.top/"/>
  <updated>2020-08-04T09:43:12.538Z</updated>
  <id>https://nonsense-j.top/</id>
  
  <author>
    <name>Nonsense</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>机器学习基本概念</title>
    <link href="https://nonsense-j.top/2020/08/04/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>https://nonsense-j.top/2020/08/04/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</id>
    <published>2020-08-04T08:03:15.000Z</published>
    <updated>2020-08-04T09:43:12.538Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Aug 04 2020 17:43:36 GMT+0800 (GMT+08:00) --><div class="note info no-icon"><p>本文主要讲述机器学习中的一些基本知识与概念的介绍，一直更新。<br>参考了知乎回答以及搜索引擎结果。</p></div><a id="more"></a><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Aug 04 2020 17:43:36 GMT+0800 (GMT+08:00) --&gt;&lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;本文主要讲述机器学习中的一些基本知识与概念的介绍，一直更新。&lt;br&gt;参考了知乎回答以及搜索引擎结果。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nonsense-j.top/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="机器学习入门" scheme="https://nonsense-j.top/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8/"/>
    
    
      <category term="Machine Learing" scheme="https://nonsense-j.top/tags/Machine-Learing/"/>
    
  </entry>
  
  <entry>
    <title>General View of CNN</title>
    <link href="https://nonsense-j.top/2020/08/04/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6CNN/"/>
    <id>https://nonsense-j.top/2020/08/04/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6CNN/</id>
    <published>2020-08-04T07:51:50.000Z</published>
    <updated>2020-08-04T09:43:14.646Z</updated>
    
    <content type="html"><![CDATA[<div class="note info no-icon"><p>本文主要讲述机器学习中的卷积神经网络CNN的基础知识与原理。<br>参考知乎专栏：<a href="https://www.zhihu.com/people/followbobo" target="_blank" rel="noopener">CNN大佬</a></p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;本文主要讲述机器学习中的卷积神经网络CNN的基础知识与原理。&lt;br&gt;参考知乎专栏：&lt;a href=&quot;https://www.zhihu.com/people/followbobo&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
    
      <category term="Machine Learning" scheme="https://nonsense-j.top/categories/Machine-Learning/"/>
    
    
      <category term="CNN" scheme="https://nonsense-j.top/tags/CNN/"/>
    
      <category term="Machine Learning" scheme="https://nonsense-j.top/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>pwn：ELF保护机制</title>
    <link href="https://nonsense-j.top/2019/12/09/pwn-ELF%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/"/>
    <id>https://nonsense-j.top/2019/12/09/pwn-ELF%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/</id>
    <published>2019-12-09T07:01:11.000Z</published>
    <updated>2020-08-04T09:43:16.084Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Aug 04 2020 17:43:36 GMT+0800 (GMT+08:00) --><div class="note info no-icon"><p>本文主要讲述checksec得到的ELF文件保护机制的意义。<br>参考博客：<a href="https://www.cnblogs.com/nul1/p/10944265.html" target="_blank" rel="noopener">二进制的保护机制</a></p></div><a id="more"></a><h2 id="checksec指令"><a href="#checksec指令" class="headerlink" title="checksec指令"></a>checksec指令</h2><p>&emsp;&emsp;在CTF刷题过程中，给定一个二进制文件（ELF）,首先就要对其保护机制判断。一般使用checksec进行查看。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">在gdb中执行：</span><br><span class="line">gdb&gt; checksec <span class="built_in">test</span></span><br><span class="line">Canary                      : No</span><br><span class="line">NX                          : Yes</span><br><span class="line">PIE                         : No</span><br><span class="line">Fortify                     : No</span><br><span class="line">RelRO                       : Partial</span><br><span class="line"></span><br><span class="line">直接在shell中执行：</span><br><span class="line">$ checksec <span class="built_in">test</span></span><br><span class="line">Arch:     i386-32-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><p>这个指令告诉了我们当前二进制文件的指令架构以及基本保护机制</p><h2 id="保护机制"><a href="#保护机制" class="headerlink" title="保护机制"></a>保护机制</h2><h3 id="Canary-——栈保护"><a href="#Canary-——栈保护" class="headerlink" title="Canary ——栈保护"></a>Canary ——栈保护</h3><p>&emsp;&emsp;这个选项表示栈保护功能有没有开启。</p><div class="note primary"><p>栈溢出保护是一种<strong>缓冲区溢出</strong>攻击缓解手段，当函数存在缓冲区溢出攻击漏洞时，攻击者可以覆盖栈上的返回地址来让 <em>shellcode</em> 能够得到执行。<br>当启用栈保护后，函数开始执行的时候会先往栈里插入<strong>cookie</strong>信息，当函数真正返回的时候会验证cookie信息是否合法，如果不合法就停止程序运行。攻击者在覆盖返回地址的时候往往也会将cookie信息给覆盖掉，导致栈保护检查失败而阻止shellcode的执行。在Linux中我们将cookie信息称为canary。</p></div><p>如果栈中开启Canary found，那么就不能用直接用溢出的方法覆盖栈中返回地址，而且要通过改写指针与局部变量、leak canary、overwrite canary的方法来绕过</p><h3 id="NX-DEP-——堆栈不可执行"><a href="#NX-DEP-——堆栈不可执行" class="headerlink" title="NX/DEP ——堆栈不可执行"></a>NX/DEP ——堆栈不可执行</h3><div class="note primary"><p>NX就是表示“not executable”，基本原理就是将数据所在内存页标识为不可执行，当程序溢出成功转入shellcode时，程序会尝试在数据页面上执行指令，此时CPU就会抛出异常，而不是去执行恶意指令。</p></div><h3 id="PIE-ASLR-——地址随机化"><a href="#PIE-ASLR-——地址随机化" class="headerlink" title="PIE/ASLR ——地址随机化"></a>PIE/ASLR ——地址随机化</h3><div class="note primary"><ul><li>0：表示关闭进程地址空间随机化。</li><li>1：表示将mmap的基址，stack和vdso页面随机化。</li><li>2：表示在1的基础上增加堆（heap）的随机化。</li></ul></div><p>&emsp;&emsp;如果进程开启这个地址随机化选项就意味着进程每次运行的时候地址都会变化，而如果没有开PIE的话那么No PIE (0x400000)，括号内的数据就是进程的基地址</p><p>&emsp;&emsp;ASLR和DEP配合使用，能有效阻止攻击者在堆栈上运行恶意代码，可以防范基于Ret2libc方式的针对DEP的攻击</p><h3 id="Fortify"><a href="#Fortify" class="headerlink" title="Fortify"></a>Fortify</h3><p>FORTIFY_SOURCE机制对格式化字符串有两个限制：</p><div class="note primary"><ol><li>包含%n的格式化字符串不能位于进程内存中的可写地址。</li><li>当使用位置参数时，必须使用范围内的所有参数。所以如果要使用%7$x，你必须同时使用1,2,3,4,5和6</li></ol></div><h3 id="RelRO"><a href="#RelRO" class="headerlink" title="RelRO"></a>RelRO</h3><p>&emsp;&emsp;在Linux系统安全领域数据可以写的存储区就会是攻击的目标，尤其是存储函数指针的区域。 所以在安全防护的角度来说尽量减少可写的存储区域对安全会有极大的好处。</p><p>&emsp;&emsp;GCC, GNU linker以及Glibc-dynamic linker一起配合实现了一种叫做relro的技术: read only relocation。大概实现就是由linker指定binary的一块经过dynamic linker处理过 relocation之后的区域为只读。</p><p>&emsp;&emsp;设置符号重定向表格为只读或在进程启动时就解析并绑定所有动态符号，从而减少对GOT（Global Offset Table）攻击。RELRO为“Partial RELRO”，说明对GOT表具有写权限。如果开启FULL RELRO，意味着我们无法修改got表。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Aug 04 2020 17:43:36 GMT+0800 (GMT+08:00) --&gt;&lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;本文主要讲述checksec得到的ELF文件保护机制的意义。&lt;br&gt;参考博客：&lt;a href=&quot;https://www.cnblogs.com/nul1/p/10944265.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;二进制的保护机制&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="pwn" scheme="https://nonsense-j.top/categories/pwn/"/>
    
    
      <category term="pwn" scheme="https://nonsense-j.top/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>pwn：格式化字符串漏洞</title>
    <link href="https://nonsense-j.top/2019/11/23/pwn-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/"/>
    <id>https://nonsense-j.top/2019/11/23/pwn-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/</id>
    <published>2019-11-23T13:29:45.000Z</published>
    <updated>2019-12-09T08:00:08.283Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Aug 04 2020 17:43:36 GMT+0800 (GMT+08:00) --><div class="note info no-icon"><p>本 pwn 例题基于攻防世界一道关于格式化字符串漏洞的<a href="https://adworld.xctf.org.cn/task/answer?type=pwn&number=2&grade=0&id=5050&page=1" target="_blank" rel="noopener">新手题</a><br>参考博客： <a href="https://www.anquanke.com/post/id/85785" target="_blank" rel="noopener">原理详解-安全客</a> <a href="https://veritas501.space/2017/04/28/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/" target="_blank" rel="noopener">具体实现-</a></p></div><a id="more"></a><h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><h3 id="格式化字符"><a href="#格式化字符" class="headerlink" title="格式化字符"></a>格式化字符</h3><div class="note primary"><p>%d - 十进制 - 输出十进制整数<br>%s - 字符串 - 从<strong>内存</strong>中读取字符串<br>%c - 字符 - 输出字符<br>%x - 十六进制 - 输出十六进制数<br>%p - 指针 - 指针地址，输出不够 8 位就左边补零<br>%n - 输出在此之前输出的字符数</p></div><h3 id="什么是格式化字符串漏洞"><a href="#什么是格式化字符串漏洞" class="headerlink" title="什么是格式化字符串漏洞"></a>什么是格式化字符串漏洞</h3><div class="note default"><p>格式化字符串漏洞的解释为“软件使用了格式化字符串作为参数，且该格式化字符串来自外部输入”。会触发该漏洞的函数很有限，主要就是 printf、sprintf、fprintf 等 print 家族函数。</p></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">printf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *format, ...)</span></span>;</span><br></pre></td></tr></table></figure><p>在这个函数中一旦没有注明 format 格式，由于printf允许参数个数不固定，故printf会自动将这段字符当作format参数，而用其后内存中的数据匹配format参数。例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line"><span class="built_in">printf</span>(str)</span><br></pre></td></tr></table></figure><p>在这一段代码中 str 来自于用户的可控输入，用户完全可以在输入时嵌入格式化字符(%s,%n之类)，</p><p><img alt="stack1.png" data-src="https://i.loli.net/2019/11/24/lsPE2LzMuCd3oyF.png"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Aug 04 2020 17:43:36 GMT+0800 (GMT+08:00) --&gt;&lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;本 pwn 例题基于攻防世界一道关于格式化字符串漏洞的&lt;a href=&quot;https://adworld.xctf.org.cn/task/answer?type=pwn&amp;number=2&amp;grade=0&amp;id=5050&amp;page=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;新手题&lt;/a&gt;&lt;br&gt;参考博客： &lt;a href=&quot;https://www.anquanke.com/post/id/85785&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原理详解-安全客&lt;/a&gt; &lt;a href=&quot;https://veritas501.space/2017/04/28/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;具体实现-&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="pwn" scheme="https://nonsense-j.top/categories/pwn/"/>
    
      <category term="攻防世界新手区" scheme="https://nonsense-j.top/categories/pwn/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E5%8C%BA/"/>
    
    
      <category term="pwn" scheme="https://nonsense-j.top/tags/pwn/"/>
    
  </entry>
  
  <entry>
    <title>Hexo操作记录</title>
    <link href="https://nonsense-j.top/2019/11/22/Hexo%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
    <id>https://nonsense-j.top/2019/11/22/Hexo%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/</id>
    <published>2019-11-21T17:41:22.000Z</published>
    <updated>2020-08-04T09:43:07.858Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Aug 04 2020 17:43:36 GMT+0800 (GMT+08:00) --><div class="note info no-icon"><p>本文主要记录本人在配置博客时的一些基本操作，以及自定义博客的注意事项。<br>仅用于自己查询。</p></div><a id="more"></a><h3 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h3><h4 id="主页文章按照修改时间进行排序"><a href="#主页文章按照修改时间进行排序" class="headerlink" title="主页文章按照修改时间进行排序"></a>主页文章按照修改时间进行排序</h4><div class="note warning no-icon"><p>没有用的操作：找到主配置文件 _config.yml，然后修改 index_generator 的 order_by 为 -updated</p></div><p>正确方法是找到<code>node_modules\hexo-generator-index-pin-top\lib\generator.js</code>添加以下代码（<a href="https://gsy00517.github.io/hexo20200207151318/" target="_blank" rel="noopener">原文链接</a>）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 当两篇文章top都有定义时</span></span><br><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.updated - a.updated; <span class="comment">// 若top值一样，则按照文章更新日期降序排列</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排列</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下两种情况是若只有一篇文章top有定义，则将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123; <span class="comment">//上一条已解释</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.updated - a.updated; <span class="comment">// 若都没定义，则按照文章更新日期降序排列</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Hexo写作"><a href="#Hexo写作" class="headerlink" title="Hexo写作"></a>Hexo写作</h3><h4 id="四种特殊的书写格式"><a href="#四种特殊的书写格式" class="headerlink" title="四种特殊的书写格式"></a>四种特殊的书写格式</h4><p>&emsp;&emsp;<a href="https://tvax2.sinaimg.cn/large/007EYOWmgy1ghevn3nn34j30ot05qmx5.jpg" target="_blank" rel="noopener">四种格式</a></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note info no-icon %&#125;</span><br><span class="line">info tip note warning四种格式，加no-icon不显示小图标</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><h4 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h4><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;emsp;&amp;emsp;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Aug 04 2020 17:43:36 GMT+0800 (GMT+08:00) --&gt;&lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;本文主要记录本人在配置博客时的一些基本操作，以及自定义博客的注意事项。&lt;br&gt;仅用于自己查询。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="博客设置" scheme="https://nonsense-j.top/categories/%E5%8D%9A%E5%AE%A2%E8%AE%BE%E7%BD%AE/"/>
    
    
      <category term="Hexo" scheme="https://nonsense-j.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://nonsense-j.top/2019/11/20/hello-world/"/>
    <id>https://nonsense-j.top/2019/11/20/hello-world/</id>
    <published>2019-11-20T14:34:03.037Z</published>
    <updated>2019-11-23T02:28:01.035Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><!-- build time:Tue Aug 04 2020 17:43:36 GMT+0800 (GMT+08:00) --><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Start" scheme="https://nonsense-j.top/categories/Start/"/>
    
    
      <category term="Start" scheme="https://nonsense-j.top/tags/Start/"/>
    
  </entry>
  
</feed>
