<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Life is a Journey</title>
  
  <subtitle>陌上花开~ | 可缓缓归矣</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nonsense-j.top/"/>
  <updated>2020-09-09T16:36:43.433Z</updated>
  <id>https://nonsense-j.top/</id>
  
  <author>
    <name>Nonsense</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Plans for Tomorrow</title>
    <link href="https://nonsense-j.top/2020/09/07/Plans-for-Tomorrow/"/>
    <id>https://nonsense-j.top/2020/09/07/Plans-for-Tomorrow/</id>
    <published>2020-09-07T13:10:42.000Z</published>
    <updated>2020-09-09T16:36:43.433Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Sep 10 2020 00:38:37 GMT+0800 (GMT+08:00) --><div class="note danger no-icon"><p><strong>—— 记录明天的计划以及今天的总结</strong><br><em>Stay hungry Stay foolish!!!</em></p></div><a id="more"></a><h1 id="WEEK-2"><a href="#WEEK-2" class="headerlink" title="WEEK 2"></a>WEEK 2</h1><h2 id="9-9-—-Wednesday-—-day-1"><a href="#9-9-—-Wednesday-—-day-1" class="headerlink" title="9.9 — Wednesday  — day 1"></a>9.9 — Wednesday — day 1</h2><ul><li><p><del><strong>课程安排</strong>：上午两节计算机网络课以及两节人工智能课，起床后看PPT</del></p></li><li><p><del><strong>医疗图像识别(下午2h)</strong>：把医疗图像识别的四种最靠谱方法实现一便并且尝试同时修改标签的位置<a href="https://github.com/gatsby2016/Augmentation-PyTorch-Transforms" target="_blank" rel="noopener">项目</a>.</del></p></li><li><p><del><strong>加密与解密(下午2h)</strong>：记录破解一个crackme程序的过程到博客上，熟悉ollydbg的基本使用。</del></p></li><li><p><del><strong>anki背单词（下午和晚上1.5h）</strong>：尽量多背一点，记录背单词情况到博客</del></p></li></ul><div class="note info"><p>&emsp;&emsp;今日关键词：<strong>效率低，吃土</strong>。<br>&emsp;&emsp;上午主要是在做那两个crackme，了解到了一些基本的小方法（定位关键跳转），但是说实话两个crackme一搞完一个上午就没了，效率还是太低了。下午上四节计算机网络课，中午预习了效果不错，但是协议这方面还有wireshark的使用还是有点不懂。晚上主要就是背了一个小时的单词然后捣鼓了一下博客，时间一下子就莫得了。<br>&emsp;&emsp;今天最大的事情就是跟团了percent studio的skog reboot套件，本来只是抢casio配色玩一下的，没想到抢到了，希望能保值，害，客制化的东西是真的贵。<br>&emsp;&emsp;日常摸鱼还是难以避免，天气炎热，心态浮躁。这两天回寝室第一件事情就是吃和看直播，堕落啊堕落。明天尝试一下回寝背单词，坚决不看直播，我jio得问题应该不大。周末就CCF考试了，我还是抱一下佛脚吧，阿巴阿巴阿巴~~</p></div><h2 id="9-10-—-Thursday-—-day-2"><a href="#9-10-—-Thursday-—-day-2" class="headerlink" title="9.10 — Thursday  — day 2"></a>9.10 — Thursday — day 2</h2><ul><li><p><strong>写crackme的writeup（整个下午）</strong>：两个crackme程序都要写writeup到博客上，多的时间看书</p></li><li><p><strong>CCF竞赛一套(整个晚上)</strong>：对于不会写的搜答案把解答过程放到博客</p></li><li><p><strong>六级试卷一张</strong>：还有富余的时间就看视频和看书</p></li><li><p><strong>anki背单词（回寝室1h）</strong>：回寝室的时候背单词，多的时间看ted talk</p></li><li><p><strong>ai设计一组ov个性</strong>：深夜设计</p></li><li><p><strong>番茄总时间6h</strong>：应该问题不大，冲冲冲！</p></li></ul><div class="note info"><p>&emsp;&emsp;今天早上我必早起下去集合吃早饭！</p></div><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Sep 10 2020 00:38:37 GMT+0800 (GMT+08:00) --&gt;&lt;div class=&quot;note danger no-icon&quot;&gt;&lt;p&gt;&lt;strong&gt;—— 记录明天的计划以及今天的总结&lt;/strong&gt;&lt;br&gt;&lt;em&gt;Stay hungry Stay foolish!!!&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="每日打卡计划" scheme="https://nonsense-j.top/categories/%E6%AF%8F%E6%97%A5%E6%89%93%E5%8D%A1%E8%AE%A1%E5%88%92/"/>
    
      <category term="计划打卡" scheme="https://nonsense-j.top/categories/%E6%AF%8F%E6%97%A5%E6%89%93%E5%8D%A1%E8%AE%A1%E5%88%92/%E8%AE%A1%E5%88%92%E6%89%93%E5%8D%A1/"/>
    
    
      <category term="Plans" scheme="https://nonsense-j.top/tags/Plans/"/>
    
  </entry>
  
  <entry>
    <title>Anki Everyday</title>
    <link href="https://nonsense-j.top/2020/09/07/Anki-Everyday/"/>
    <id>https://nonsense-j.top/2020/09/07/Anki-Everyday/</id>
    <published>2020-09-07T13:03:41.000Z</published>
    <updated>2020-09-09T16:36:45.640Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Sep 10 2020 00:38:37 GMT+0800 (GMT+08:00) --><div class="note danger"><p><strong>—— 记录每一天的背单词以及看到的好句子</strong><br><em>懒惰久了，稍微努力一下，就以为自己在拼命？？？</em></p></div><a id="more"></a><h1 id="WEEK-2"><a href="#WEEK-2" class="headerlink" title="WEEK 2"></a>WEEK 2</h1><h2 id="9-9-—-Wednesday-—-day-1"><a href="#9-9-—-Wednesday-—-day-1" class="headerlink" title="9.9 — Wednesday  — day 1"></a>9.9 — Wednesday — day 1</h2><div class="table-container"><table><thead><tr><th style="text-align:left">Word</th><th>Translation</th><th>Word</th><th>Translation</th></tr></thead><tbody><tr><td style="text-align:left">legislative</td><td><em>adj.</em> 有立法权的，制定法律的</td><td>bail</td><td><strong>v./n.</strong> 保释，离开</td></tr><tr><td style="text-align:left">secular</td><td><strong>adj.</strong> 世俗的，非宗教的</td><td>resemblance</td><td><strong>n.</strong> 相似，相同</td></tr><tr><td style="text-align:left">rotten</td><td><strong>adj.</strong> 腐烂的，恶劣的，腐败的</td><td>glossy</td><td><strong>adj.</strong> 光泽的，光滑的</td></tr><tr><td style="text-align:left">coalition</td><td><strong>n.</strong> 联合，结合，联盟</td><td>thorn</td><td><strong>n.</strong> 刺，荆棘（rose）</td></tr><tr><td style="text-align:left">alliance</td><td><strong>n.</strong> 盟友</td><td>deprive</td><td><strong>v.</strong> 使丧失，剥夺</td></tr><tr><td style="text-align:left">calf</td><td><strong>n.</strong> 小牛，小腿</td><td>shutter</td><td><strong>n.</strong> 百叶窗，相机快门 <strong>v.</strong> 关百叶窗</td></tr><tr><td style="text-align:left">notorious</td><td><strong>adj.</strong> 臭名昭著的</td><td>sack</td><td><strong>v. /n.</strong> 塑料袋，解雇，抢劫</td></tr><tr><td style="text-align:left">convention</td><td>n. 会议，惯例，习俗</td><td>pine</td><td><strong>n.</strong> 松树 <strong>v.</strong> 悲伤（for）</td></tr><tr><td style="text-align:left">resort</td><td><strong>v./n.</strong> 求助，采取，旅游景点</td><td>discretion</td><td><strong>n.</strong> 自由裁量权，判断力</td></tr><tr><td style="text-align:left">appetite</td><td><strong>n.</strong> 胃口</td><td>integral</td><td><strong>adj.</strong> 必不可少的，基本的</td></tr><tr><td style="text-align:left">conceal</td><td><strong>v.</strong> 掩盖</td><td>defy</td><td><strong>v.</strong> 违抗</td></tr><tr><td style="text-align:left">disposable</td><td><strong>adj.</strong> 可随意使用的，一次性的</td><td>integration</td><td><strong>n.</strong> 归一化，统一</td></tr><tr><td style="text-align:left">dialect</td><td><strong>n.</strong> 方言（accent）</td><td>regiment</td><td><strong>n.</strong> （军队的）团 <strong>v.</strong> 严格控制</td></tr><tr><td style="text-align:left">eradicate</td><td><strong>v.</strong> 根除，消灭，杜绝</td><td>evaporate</td><td><strong>v.</strong> 蒸发，衰减，减弱</td></tr><tr><td style="text-align:left">endeavor</td><td><strong>v./n.</strong> 尽力，努力</td><td>formality</td><td>n. 正式手续，例行公事</td></tr></tbody></table></div><div class="note info"><ul><li><strong>bail out (of sth)</strong>：跳伞，帮助脱离困境，摆脱逃避<ul><li>I’d understand if you wanted to bail out of this relationship.</li><li>Ryan’s late goal bailed out his team. 瑞安在比赛后阶段得的一分拯救了他的球队</li></ul></li><li><strong>resort to (violence)</strong>：the act of using sth, especially sth bad or unpleasant, because nothing else is possible.区别于ask for …</li><li><strong>in pursuit of sth</strong>：追求某事物（<strong>pursue</strong> 一般是追求长远目标）</li><li><strong>merely a formality</strong>：只是走个过场<ul><li>He already knows he has the job so the interview is a mere formality. 他已知道得到了这个工作，所以面试仅仅是走走过场</li></ul></li><li><strong>a veteran of many wars</strong>：一个经历很多次战争的老兵（<strong>veteran</strong>也可指某方面经验丰富的人）</li><li><strong>Calf muscles will be sore after a long run.</strong> 表示肌肉酸痛用<strong>sore</strong></li><li><strong>suspicion</strong>：怀疑，嫌疑<ul><li><strong>on suspicion of </strong>：We’re arresting you on suspicion of murder!</li><li><strong>under suspicion of</strong>：A number of doctors came under suspicion of unethical behavior. 一些医生涉嫌有不道德行为。</li></ul></li></ul></div><h2 id="9-10-—-Thursday-—-day-2"><a href="#9-10-—-Thursday-—-day-2" class="headerlink" title="9.10 — Thursday  — day 2"></a>9.10 — Thursday — day 2</h2><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Sep 10 2020 00:38:37 GMT+0800 (GMT+08:00) --&gt;&lt;div class=&quot;note danger&quot;&gt;&lt;p&gt;&lt;strong&gt;—— 记录每一天的背单词以及看到的好句子&lt;/strong&gt;&lt;br&gt;&lt;em&gt;懒惰久了，稍微努力一下，就以为自己在拼命？？？&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="每日打卡计划" scheme="https://nonsense-j.top/categories/%E6%AF%8F%E6%97%A5%E6%89%93%E5%8D%A1%E8%AE%A1%E5%88%92/"/>
    
      <category term="英语打卡" scheme="https://nonsense-j.top/categories/%E6%AF%8F%E6%97%A5%E6%89%93%E5%8D%A1%E8%AE%A1%E5%88%92/%E8%8B%B1%E8%AF%AD%E6%89%93%E5%8D%A1/"/>
    
    
      <category term="English" scheme="https://nonsense-j.top/tags/English/"/>
    
      <category term="Everyday" scheme="https://nonsense-j.top/tags/Everyday/"/>
    
  </entry>
  
  <entry>
    <title>机器学习基本概念</title>
    <link href="https://nonsense-j.top/2020/08/04/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>https://nonsense-j.top/2020/08/04/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</id>
    <published>2020-08-04T08:03:15.000Z</published>
    <updated>2020-08-05T10:33:57.073Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 08 2020 19:09:44 GMT+0800 (GMT+08:00) --><div class="note info no-icon"><p>本文主要讲述机器学习中的一些基本知识与概念的介绍，一直更新。<br>参考了知乎回答以及搜索引擎结果。</p></div><a id="more"></a><h2 id="MNIST数据集"><a href="#MNIST数据集" class="headerlink" title="MNIST数据集"></a>MNIST数据集</h2><p>&emsp;&emsp;MNIST数据集(Mixed National Institute of Standards and Technology database)是美国国家标准与技术研究院收集整理的大型手写数字数据库,包含60,000个示例的训练集以及10,000个示例的测试集。</p><ul><li><p>Training set images: train-images-idx3-ubyte.gz</p></li><li><p>Training set labels: train-labels-idx1-ubyte.gz</p></li><li><p>Test set images: t10k-images-idx3-ubyte.gz</p></li><li><p>Test set labels: t10k-labels-idx1-ubyte.gz</p></li></ul><p>&emsp;&emsp;图片都是以字节的形式存储的，要想读取可以使用python中的<code>numpy</code>库。一个图片是一个样本（对应行），而图片都是划分为</p><script type="math/tex;mode=display">lim_{1\to+\infty}P(|\frac{1}{n}\sum_i^nX_i-\mu|<\epsilon)=1, i=1,...,n</script><p>&emsp;&emsp;图片都是以字节的形式存储的，要想读取可以使用python中的<code>numpy</code>库。一个图片是一个样本（对应行）</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 08 2020 19:09:44 GMT+0800 (GMT+08:00) --&gt;&lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;本文主要讲述机器学习中的一些基本知识与概念的介绍，一直更新。&lt;br&gt;参考了知乎回答以及搜索引擎结果。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nonsense-j.top/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="机器学习入门" scheme="https://nonsense-j.top/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8/"/>
    
    
      <category term="Machine Learing" scheme="https://nonsense-j.top/tags/Machine-Learing/"/>
    
  </entry>
  
  <entry>
    <title>General View of CNN</title>
    <link href="https://nonsense-j.top/2020/08/04/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6CNN/"/>
    <id>https://nonsense-j.top/2020/08/04/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AD%A6CNN/</id>
    <published>2020-08-04T07:51:50.000Z</published>
    <updated>2020-09-07T13:08:06.879Z</updated>
    
    <content type="html"><![CDATA[<div class="note info no-icon"><p>本文主要讲述机器学习中的卷积神经网络CNN的基础知识与原理。<br>参考知乎专栏：<a href="https://www.zhihu.com/people/followbobo" target="_blank" rel="noopener">CNN大佬</a></p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;本文主要讲述机器学习中的卷积神经网络CNN的基础知识与原理。&lt;br&gt;参考知乎专栏：&lt;a href=&quot;https://www.zhihu.com/people/followbobo&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
    
      <category term="机器学习" scheme="https://nonsense-j.top/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="CNN" scheme="https://nonsense-j.top/tags/CNN/"/>
    
      <category term="Machine Learning" scheme="https://nonsense-j.top/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>pwn：ELF保护机制</title>
    <link href="https://nonsense-j.top/2019/12/09/pwn-ELF%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/"/>
    <id>https://nonsense-j.top/2019/12/09/pwn-ELF%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/</id>
    <published>2019-12-09T07:01:11.000Z</published>
    <updated>2020-09-07T13:07:51.113Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 08 2020 19:09:44 GMT+0800 (GMT+08:00) --><div class="note info no-icon"><p>本文主要讲述checksec得到的ELF文件保护机制的意义。<br>参考博客：<a href="https://www.cnblogs.com/nul1/p/10944265.html" target="_blank" rel="noopener">二进制的保护机制</a></p></div><a id="more"></a><h2 id="checksec指令"><a href="#checksec指令" class="headerlink" title="checksec指令"></a>checksec指令</h2><p>&emsp;&emsp;在CTF刷题过程中，给定一个二进制文件（ELF）,首先就要对其保护机制判断。一般使用checksec进行查看。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">在gdb中执行：</span><br><span class="line">gdb&gt; checksec <span class="built_in">test</span></span><br><span class="line">Canary                      : No</span><br><span class="line">NX                          : Yes</span><br><span class="line">PIE                         : No</span><br><span class="line">Fortify                     : No</span><br><span class="line">RelRO                       : Partial</span><br><span class="line"></span><br><span class="line">直接在shell中执行：</span><br><span class="line">$ checksec <span class="built_in">test</span></span><br><span class="line">Arch:     i386-32-little</span><br><span class="line">RELRO:    Partial RELRO</span><br><span class="line">Stack:    No canary found</span><br><span class="line">NX:       NX enabled</span><br><span class="line">PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><p>这个指令告诉了我们当前二进制文件的指令架构以及基本保护机制</p><h2 id="保护机制"><a href="#保护机制" class="headerlink" title="保护机制"></a>保护机制</h2><h3 id="Canary-———栈保护"><a href="#Canary-———栈保护" class="headerlink" title="Canary ———栈保护"></a>Canary ———栈保护</h3><p>&emsp;&emsp;这个选项表示栈保护功能有没有开启。</p><div class="note primary"><p>栈溢出保护是一种<strong>缓冲区溢出</strong>攻击缓解手段，当函数存在缓冲区溢出攻击漏洞时，攻击者可以覆盖栈上的返回地址来让 <em>shellcode</em> 能够得到执行。<br>当启用栈保护后，函数开始执行的时候会先往栈里插入<strong>cookie</strong>信息，当函数真正返回的时候会验证cookie信息是否合法，如果不合法就停止程序运行。攻击者在覆盖返回地址的时候往往也会将cookie信息给覆盖掉，导致栈保护检查失败而阻止shellcode的执行。在Linux中我们将cookie信息称为canary。</p></div><p>如果栈中开启Canary found，那么就不能用直接用溢出的方法覆盖栈中返回地址，而且要通过改写指针与局部变量、leak canary、overwrite canary的方法来绕过</p><h3 id="NX-DEP-———堆栈不可执行"><a href="#NX-DEP-———堆栈不可执行" class="headerlink" title="NX/DEP ———堆栈不可执行"></a>NX/DEP ———堆栈不可执行</h3><div class="note primary"><p>NX就是表示“not executable”，基本原理就是将数据所在内存页标识为不可执行，当程序溢出成功转入shellcode时，程序会尝试在数据页面上执行指令，此时CPU就会抛出异常，而不是去执行恶意指令。</p></div><h3 id="PIE-ASLR-———地址随机化"><a href="#PIE-ASLR-———地址随机化" class="headerlink" title="PIE/ASLR ———地址随机化"></a>PIE/ASLR ———地址随机化</h3><div class="note primary"><ul><li>0：表示关闭进程地址空间随机化。</li><li>1：表示将mmap的基址，stack和vdso页面随机化。</li><li>2：表示在1的基础上增加堆（heap）的随机化。</li></ul></div><p>&emsp;&emsp;如果进程开启这个地址随机化选项就意味着进程每次运行的时候地址都会变化，而如果没有开PIE的话那么No PIE (0x400000)，括号内的数据就是进程的基地址</p><p>&emsp;&emsp;ASLR和DEP配合使用，能有效阻止攻击者在堆栈上运行恶意代码，可以防范基于Ret2libc方式的针对DEP的攻击</p><h3 id="Fortify"><a href="#Fortify" class="headerlink" title="Fortify"></a>Fortify</h3><p>FORTIFY_SOURCE机制对格式化字符串有两个限制：<br></p><div class="note primary"><ol><li>包含%n的格式化字符串不能位于进程内存中的可写地址。</li><li>当使用位置参数时，必须使用范围内的所有参数。所以如果要使用%7$x，你必须同时使用1,2,3,4,5和6</li></ol></div><p></p><h3 id="RelRO"><a href="#RelRO" class="headerlink" title="RelRO"></a>RelRO</h3><p>&emsp;&emsp;在Linux系统安全领域数据可以写的存储区就会是攻击的目标，尤其是存储函数指针的区域。 所以在安全防护的角度来说尽量减少可写的存储区域对安全会有极大的好处。</p><p>&emsp;&emsp;GCC, GNU linker以及Glibc-dynamic linker一起配合实现了一种叫做relro的技术: read only relocation。大概实现就是由linker指定binary的一块经过dynamic linker处理过 relocation之后的区域为只读。</p><p>&emsp;&emsp;设置符号重定向表格为只读或在进程启动时就解析并绑定所有动态符号，从而减少对GOT（Global Offset Table）攻击。RELRO为“Partial RELRO”，说明对GOT表具有写权限。如果开启FULL RELRO，意味着我们无法修改got表。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 08 2020 19:09:44 GMT+0800 (GMT+08:00) --&gt;&lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;本文主要讲述checksec得到的ELF文件保护机制的意义。&lt;br&gt;参考博客：&lt;a href=&quot;https://www.cnblogs.com/nul1/p/10944265.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;二进制的保护机制&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="二进制安全" scheme="https://nonsense-j.top/categories/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8/"/>
    
      <category term="Pwn学习" scheme="https://nonsense-j.top/categories/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8/Pwn%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Pwn" scheme="https://nonsense-j.top/tags/Pwn/"/>
    
  </entry>
  
  <entry>
    <title>pwn：格式化字符串漏洞</title>
    <link href="https://nonsense-j.top/2019/11/23/pwn-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/"/>
    <id>https://nonsense-j.top/2019/11/23/pwn-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E/</id>
    <published>2019-11-23T13:29:45.000Z</published>
    <updated>2020-09-07T13:07:38.177Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 08 2020 19:09:44 GMT+0800 (GMT+08:00) --><div class="note info no-icon"><p>本 pwn 例题基于攻防世界一道关于格式化字符串漏洞的<a href="https://adworld.xctf.org.cn/task/answer?type=pwn&amp;number=2&amp;grade=0&amp;id=5050&amp;page=1" target="_blank" rel="noopener">新手题</a><br>参考博客： <a href="https://www.anquanke.com/post/id/85785" target="_blank" rel="noopener">原理详解-安全客</a> <a href="https://veritas501.space/2017/04/28/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/" target="_blank" rel="noopener">具体实现-</a></p></div><a id="more"></a><h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><h3 id="格式化字符"><a href="#格式化字符" class="headerlink" title="格式化字符"></a>格式化字符</h3><div class="note primary"><p>%d - 十进制 - 输出十进制整数<br>%s - 字符串 - 从<strong>内存</strong>中读取字符串<br>%c - 字符 - 输出字符<br>%x - 十六进制 - 输出十六进制数<br>%p - 指针 - 指针地址，输出不够 8 位就左边补零<br>%n - 输出在此之前输出的字符数</p></div><h3 id="什么是格式化字符串漏洞"><a href="#什么是格式化字符串漏洞" class="headerlink" title="什么是格式化字符串漏洞"></a>什么是格式化字符串漏洞</h3><div class="note default"><p>格式化字符串漏洞的解释为“软件使用了格式化字符串作为参数，且该格式化字符串来自外部输入”。会触发该漏洞的函数很有限，主要就是 printf、sprintf、fprintf 等 print 家族函数。</p></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">printf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *format, ...)</span></span>;</span><br></pre></td></tr></table></figure><p>在这个函数中一旦没有注明 format 格式，由于printf允许参数个数不固定，故printf会自动将这段字符当作format参数，而用其后内存中的数据匹配format参数。例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line"><span class="built_in">printf</span>(str)</span><br></pre></td></tr></table></figure><p>在这一段代码中 str 来自于用户的可控输入，用户完全可以在输入时嵌入格式化字符(%s,%n之类)，</p><p><img alt="stack1.png" data-src="https://i.loli.net/2019/11/24/lsPE2LzMuCd3oyF.png"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 08 2020 19:09:44 GMT+0800 (GMT+08:00) --&gt;&lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;本 pwn 例题基于攻防世界一道关于格式化字符串漏洞的&lt;a href=&quot;https://adworld.xctf.org.cn/task/answer?type=pwn&amp;amp;number=2&amp;amp;grade=0&amp;amp;id=5050&amp;amp;page=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;新手题&lt;/a&gt;&lt;br&gt;参考博客： &lt;a href=&quot;https://www.anquanke.com/post/id/85785&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原理详解-安全客&lt;/a&gt; &lt;a href=&quot;https://veritas501.space/2017/04/28/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;具体实现-&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="二进制安全" scheme="https://nonsense-j.top/categories/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8/"/>
    
      <category term="Pwn学习" scheme="https://nonsense-j.top/categories/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8/Pwn%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Pwn" scheme="https://nonsense-j.top/tags/Pwn/"/>
    
  </entry>
  
  <entry>
    <title>Hexo操作记录</title>
    <link href="https://nonsense-j.top/2019/11/22/Hexo%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
    <id>https://nonsense-j.top/2019/11/22/Hexo%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/</id>
    <published>2019-11-21T17:41:22.000Z</published>
    <updated>2020-09-07T16:49:50.801Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Sep 08 2020 19:09:44 GMT+0800 (GMT+08:00) --><div class="note info no-icon"><p>本文主要记录本人在配置博客时的一些基本操作，以及自定义博客的注意事项。<br>仅用于自己查询。</p></div><a id="more"></a><h3 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h3><h4 id="对整个hexo项目的个人理解"><a href="#对整个hexo项目的个人理解" class="headerlink" title="对整个hexo项目的个人理解"></a>对整个hexo项目的个人理解</h4><p>&emsp;&emsp;总的配置文件有两个，都叫做<code>_config.yml</code>，一个是<code>hexo</code>的配置文件（总配置文件），一个是<code>next</code>主题的配置文件（主题配置文件）。在总配置文件中定义的是博客基本信息，包括博主基本信息，侧栏头像，部署在哪，以及全局的一些插件（搜索，neat压缩，seo设置）；在主题配置文件中主要是主题的一些特性设置，主要是说明了页面的具体排布（指定了<code>myblog/source/_data/styles.styl</code>）以及一些页面上用到的插件（js）等等。<br>&emsp;&emsp;在<code>style.styl</code>中可以对页面格式进行直接调整，可以使用浏览器<code>F12</code>辅助，用到的都是基本的<code>css</code>知识。但其实页面的基础控制在<code>myblog/themes/next/source/css/_variables/base.styl</code>中，包括全局字体，字体大小，行距等等，在这里一般修改全局的设置，找到对应项改变<br>即可。<br>&emsp;&emsp;页面使用到的图片都在next主题目录中定义，定位图片：<code>/images/avatar.jpeg</code>。</p><h4 id="主页文章按照修改时间进行排序"><a href="#主页文章按照修改时间进行排序" class="headerlink" title="主页文章按照修改时间进行排序"></a>主页文章按照修改时间进行排序</h4><div class="note warning no-icon"><p>没有用的操作：找到主配置文件 _config.yml，然后修改 index_generator 的 order_by 为 -updated</p></div><p>正确方法是找到<code>node_modules/hexo-generator-index-pin-top/lib/generator.js</code>添加以下代码（<a href="https://gsy00517.github.io/hexo20200207151318/" target="_blank" rel="noopener">原文链接</a>）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 当两篇文章top都有定义时</span></span><br><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.updated - a.updated; <span class="comment">// 若top值一样，则按照文章更新日期降序排列</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排列</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下两种情况是若只有一篇文章top有定义，则将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123; <span class="comment">//上一条已解释</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.updated - a.updated; <span class="comment">// 若都没定义，则按照文章更新日期降序排列</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="修改全局字体或者局部字体"><a href="#修改全局字体或者局部字体" class="headerlink" title="修改全局字体或者局部字体"></a>修改全局字体或者局部字体</h4><p>&emsp;&emsp;这里的字体都是自定义字体，不是<code>google fonts</code>，方式就是在<code>base.styl</code>或者<code>style.styl</code>中定义字体引入</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">    <span class="comment">/* 字体名称随意起 */</span></span><br><span class="line">    <span class="attribute">font-family</span>: zzAw;</span><br><span class="line">    <span class="comment">/*你下载字体所在的位置*/</span></span><br><span class="line">    src: url('/fonts/zzAw.ttf');</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;如果要使用字体只要在相应css层中改变<code>font-family</code>即可，全局字体就是直接改变<code>base.styl</code>。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Font families.</span></span><br><span class="line">$font-family-chinese      = zzAw, sans-serif; // 没有zzAw的情况下选用sans-serif字体</span><br></pre></td></tr></table></figure><h3 id="Hexo写作"><a href="#Hexo写作" class="headerlink" title="Hexo写作"></a>Hexo写作</h3><h4 id="首页显示"><a href="#首页显示" class="headerlink" title="首页显示"></a>首页显示</h4><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tags: [Machine Learing] // 添加多个标签</span><br><span class="line">/<span class="emphasis">* 添加子目录，下面的是上面的子目录 *</span>/</span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">  - </span>机器学习</span><br><span class="line"><span class="bullet">  - </span>机器学习入门</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- more --&gt;</span></span> // 表示到这里折叠</span><br></pre></td></tr></table></figure><h4 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h4><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;emsp;&amp;emsp;</span><br></pre></td></tr></table></figure><h4 id="四种特殊的书写格式"><a href="#四种特殊的书写格式" class="headerlink" title="四种特殊的书写格式"></a>四种特殊的书写格式</h4><p><img alt="四种格式" data-src="https://tvax2.sinaimg.cn/large/007EYOWmgy1ghevn3nn34j30ot05qmx5.jpg"></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class]   : default | primary | success | info | warning | danger.</span><br></pre></td></tr></table></figure><h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><h4 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h4 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h4 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h4 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Sep 08 2020 19:09:44 GMT+0800 (GMT+08:00) --&gt;&lt;div class=&quot;note info no-icon&quot;&gt;&lt;p&gt;本文主要记录本人在配置博客时的一些基本操作，以及自定义博客的注意事项。&lt;br&gt;仅用于自己查询。&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="博客设置" scheme="https://nonsense-j.top/categories/%E5%8D%9A%E5%AE%A2%E8%AE%BE%E7%BD%AE/"/>
    
    
      <category term="Hexo" scheme="https://nonsense-j.top/tags/Hexo/"/>
    
  </entry>
  
</feed>
